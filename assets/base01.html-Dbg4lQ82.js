import{_ as i,c as r,b as e,a as l,d as a,e as t,f as s,r as o,o as u}from"./app-DcNNbRqE.js";const k={},d={start:"3"},v={href:"https://developer.mozilla.org/zh-CN/",target:"_blank",rel:"noopener noreferrer"};function m(b,n){const p=o("font"),c=o("ExternalLinkIcon");return u(),r("div",null,[n[20]||(n[20]=e(`<h1 id="javascript" tabindex="-1"><a class="header-anchor" href="#javascript"><span>JavaScript</span></a></h1><p><img src="https://cdn.nlark.com/yuque/0/2018/png/96947/1533811081157-bf0dcfb6-c552-47fe-b324-c36a48e0cc36.png" alt=""></p><p>JavaScript :简称:js，分三个部分:</p><ol><li>ECMAScript 标准----js的基本的语法</li><li>DOM------Document Object Model 文档对象模型</li><li>BOM------Browser Object Model 浏览器对象模型</li></ol><p>JavaScript是什么？</p><ul><li>是一门脚本语言 不需要编译 直接运行</li><li>是一门解释性语言</li><li>是一门动态类型的语言</li><li>是一门基于对象的语言</li></ul><h3 id="javascript的书写位置" tabindex="-1"><a class="header-anchor" href="#javascript的书写位置"><span>JavaScript的书写位置</span></a></h3><ol><li>写在行内</li></ol><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">&quot;button&quot;</span> value<span class="token operator">=</span><span class="token string">&quot;按钮&quot;</span> onclick<span class="token operator">=</span><span class="token string">&quot;alert(&#39;Hello World&#39;)&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>2.写在script标签中</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token operator">&lt;</span>head<span class="token operator">&gt;</span></span>
<span class="line">  <span class="token operator">&lt;</span>script<span class="token operator">&gt;</span></span>
<span class="line">    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&#39;Hello World!&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span></span>
<span class="line"><span class="token operator">&lt;</span><span class="token operator">/</span>head<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>写在外部js文件中，在页面引入 引用外部js文件的script标签中不可以写JavaScript代码</li></ol><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">&quot;test.js&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="javascript的变量" tabindex="-1"><a class="header-anchor" href="#javascript的变量"><span>JavaScript的变量</span></a></h3><ol><li>定义方式</li></ol><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">var</span> num<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="2"><li>变量的赋值</li></ol><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">var</span> age<span class="token punctuation">;</span></span>
<span class="line">age <span class="token operator">=</span> <span class="token number">18</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div>`,18)),l("ol",d,[l("li",null,[a(p,{style:{color:"rgb(51, 51, 51)"}},{default:t(()=>n[0]||(n[0]=[s("同时声明多个变量 及初始化")])),_:1})])]),n[21]||(n[21]=e(`<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">var</span> age<span class="token punctuation">,</span> name<span class="token punctuation">;</span></span>
<span class="line">age <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span></span>
<span class="line">name <span class="token operator">=</span> <span class="token string">&#39;zs&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">var</span> age <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">,</span> name <span class="token operator">=</span> <span class="token string">&#39;tom&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="javascript变量的命名规则和规范" tabindex="-1"><a class="header-anchor" href="#javascript变量的命名规则和规范"><span>JavaScript变量的命名规则和规范</span></a></h3><ul><li>规则 - 必须遵守的，不遵守会报错 <ul><li>由字母、数字、下划线、$符号组成，不能以数字开头</li><li>不能是关键字和保留字，例如：for、while。</li><li>区分大小写</li></ul></li><li>规范 - 建议遵守的，不遵守不会报错 <ul><li>变量名必须有意义，做到见名知意</li><li>遵守驼峰命名法。首字母小写，后面单词的首字母需要大写。例如：userName、userPassword</li></ul></li></ul><h3 id="javascript数据类型" tabindex="-1"><a class="header-anchor" href="#javascript数据类型"><span>JavaScript数据类型</span></a></h3>`,4)),a(p,{style:{color:"rgb(201, 14, 14)"}},{default:t(()=>n[1]||(n[1]=[s("Number、 String、 Boolean、 Undefined、 Null")])),_:1}),n[22]||(n[22]=e(`<p>Number</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">十进制</span>
<span class="line">	<span class="token keyword">var</span> num <span class="token operator">=</span> <span class="token number">9</span><span class="token punctuation">;</span></span>
<span class="line">	进行算数计算时，八进制和十六进制表示的数值最终都将被转换成十进制数值。</span>
<span class="line">十六进制</span>
<span class="line">	<span class="token keyword">var</span> num <span class="token operator">=</span> <span class="token number">0xA</span><span class="token punctuation">;</span></span>
<span class="line">	数字序列范围：<span class="token number">0</span><span class="token operator">~</span><span class="token number">9</span>以及<span class="token constant">A</span><span class="token operator">~</span><span class="token constant">F</span></span>
<span class="line"></span>
<span class="line">浮点数</span>
<span class="line">	<span class="token keyword">var</span> n <span class="token operator">=</span> <span class="token number">5e-324</span><span class="token punctuation">;</span>   <span class="token comment">// 科学计数法  5乘以10的-324次方  </span></span>
<span class="line">浮点数值的最高精度是 <span class="token number">17</span> 位小数，但在进行算术计算时其精确度远远不如整数</span>
<span class="line">   <span class="token keyword">var</span> result <span class="token operator">=</span> <span class="token number">0.1</span> <span class="token operator">+</span> <span class="token number">0.2</span><span class="token punctuation">;</span>    <span class="token comment">// 结果不是 0.3，而是：0.30000000000000004</span></span>
<span class="line">   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">0.07</span> <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">   不要判断两个浮点数是否相等</span>
<span class="line"></span>
<span class="line">最小值：Number<span class="token punctuation">.</span><span class="token constant">MIN_VALUE</span>，这个值为： <span class="token number">5e-324</span></span>
<span class="line">最大值：Number<span class="token punctuation">.</span><span class="token constant">MAX_VALUE</span>，这个值为： <span class="token number">1.7976931348623157e+308</span></span>
<span class="line">无穷大：<span class="token number">Infinity</span></span>
<span class="line">无穷小：<span class="token operator">-</span><span class="token number">Infinity</span></span>
<span class="line"></span>
<span class="line"><span class="token number">NaN</span>：not a number</span>
<span class="line">  <span class="token number">NaN</span> 与任何值都不相等，包括他本身</span>
<span class="line"><span class="token literal-property property">isNaN</span><span class="token operator">:</span> is not a number</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>String类型</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token string">&#39;abc&#39;</span>   <span class="token string">&quot;abc&quot;</span>   <span class="token string">&#39;中国人&#39;</span></span>
<span class="line"><span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token string">&#39;Hello World&#39;</span><span class="token punctuation">;</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">/*</span>
<span class="line">    字符串拼接使用 + 连接</span>
<span class="line">    两边只要有一个是字符串，那么+就是字符串拼接功能</span>
<span class="line">    两边如果都是数字，那么就是算术功</span>
<span class="line">*/</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">11</span> <span class="token operator">+</span> <span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;hello&#39;</span> <span class="token operator">+</span> <span class="token string">&#39; world&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;100&#39;</span> <span class="token operator">+</span> <span class="token string">&#39;100&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;11&#39;</span> <span class="token operator">+</span> <span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;male:&#39;</span> <span class="token operator">+</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://cdn.nlark.com/yuque/0/2018/png/96947/1533812350712-6545f905-0b5a-4564-982c-36551ad13123.png" alt=""></p><p>Boolean类型</p><ul><li>Boolean字面量： true和false，区分大小写</li><li>计算机内部存储：true为1，false为0</li></ul><p>Undefined和Null</p><ol><li>undefined表示一个声明了没有赋值的变量，变量只声明的时候值默认是undefined</li><li>null表示一个空，变量的值如果想为null，必须手动设置</li></ol><h3 id="获取变量的类型" tabindex="-1"><a class="header-anchor" href="#获取变量的类型"><span>获取变量的类型</span></a></h3><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token string">&#39;hello&#39;</span><span class="token punctuation">;</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// &#39;string&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="字面量" tabindex="-1"><a class="header-anchor" href="#字面量"><span>字面量</span></a></h3><p>在源代码中一个固定值的表示法。</p><p>数值字面量：8, 9, 10</p><p>字符串字面量：&#39;黑马程序员&#39;, &quot;大前端&quot;</p><p>布尔字面量：true，false</p><h3 id="注释" tabindex="-1"><a class="header-anchor" href="#注释"><span>注释</span></a></h3><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token comment">// 单行注释 这是一个变量</span></span>
<span class="line"><span class="token keyword">var</span> name <span class="token operator">=</span> <span class="token string">&#39;hm&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">/*</span>
<span class="line">&#39;abc&#39;   &quot;abc&quot;   &#39;中国人&#39;</span>
<span class="line">var str = &#39;Hello World&#39;;</span>
<span class="line">console.log(str.length);</span>
<span class="line">*/</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="数组" tabindex="-1"><a class="header-anchor" href="#数组"><span>数组</span></a></h3>`,19)),a(p,{style:{color:"rgb(119, 119, 119)"}},{default:t(()=>n[2]||(n[2]=[s("所谓数组，就是将多个元素（通常是同一类型）按一定顺序排列放到一个集合中，那么这个集合我们就称之为数组。")])),_:1}),n[23]||(n[23]=l("h3",{id:"数组的定义",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#数组的定义"},[l("span",null,"数组的定义")])],-1)),a(p,{style:{color:"rgb(119, 119, 119)"}},{default:t(()=>n[3]||(n[3]=[s("数组是一个有序的列表，可以在数组中存放任意的数据，并且数组的长度可以动态的调整。")])),_:1}),n[24]||(n[24]=e(`<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token comment">// 创建一个空数组</span></span>
<span class="line"><span class="token keyword">var</span> arr1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> </span>
<span class="line"><span class="token comment">// 创建一个包含3个数值的数组，多个数组项以逗号隔开</span></span>
<span class="line"><span class="token keyword">var</span> arr2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span> </span>
<span class="line"><span class="token comment">// 创建一个包含2个字符串的数组</span></span>
<span class="line"><span class="token keyword">var</span> arr3 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span> </span>
<span class="line"></span>
<span class="line"><span class="token comment">// 可以通过数组的length属性获取数组的长度</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr3<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 可以设置length属性改变数组中元素的个数</span></span>
<span class="line">arr3<span class="token punctuation">.</span>length <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="数组的取值" tabindex="-1"><a class="header-anchor" href="#数组的取值"><span>数组的取值</span></a></h3><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token comment">// 格式：数组名[下标]	下标又称索引</span></span>
<span class="line"><span class="token comment">// 功能：获取数组对应下标的那个值，如果下标不存在，则返回undefined。</span></span>
<span class="line"><span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;red&#39;</span><span class="token punctuation">,</span><span class="token punctuation">,</span> <span class="token string">&#39;green&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;blue&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>	<span class="token comment">// red</span></span>
<span class="line">arr<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// blue</span></span>
<span class="line">arr<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// 这个数组的最大下标为2,因此返回undefined</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="遍历数组" tabindex="-1"><a class="header-anchor" href="#遍历数组"><span>遍历数组</span></a></h3><div class="language-plain line-numbers-mode" data-highlighter="prismjs" data-ext="plain" data-title="plain"><pre><code><span class="line">for(var i = 0; i &lt; arr.length; i++) {</span>
<span class="line">	// 数组遍历的固定结构</span>
<span class="line">}</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="数组元素的新增" tabindex="-1"><a class="header-anchor" href="#数组元素的新增"><span>数组元素的新增</span></a></h3><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token comment">// 格式：数组名[下标/索引] = 值;</span></span>
<span class="line"><span class="token comment">// 如果下标有对应的值，会把原来的值覆盖，如果下标不存在，会给数组新增一个元素。</span></span>
<span class="line"><span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;red&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;green&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;blue&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 把red替换成了yellow</span></span>
<span class="line">arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;yellow&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 给数组新增加了一个pink的值</span></span>
<span class="line">arr<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;pink&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="函数" tabindex="-1"><a class="header-anchor" href="#函数"><span>函数</span></a></h3><p>把一段相对独立的具有特定功能的代码块封装起来，形成一个独立实体，就是函数，起个名字（函数名），在后续开发中可以反复调用，函数的作用就是封装一段代码，将来可以重复使用</p><h3 id="函数的定义" tabindex="-1"><a class="header-anchor" href="#函数的定义"><span>函数的定义</span></a></h3><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token comment">//①函数声明</span></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">函数名</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// 函数体</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">method</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&quot;helloMethod&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token function">method</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">//===================================</span></span>
<span class="line"><span class="token comment">//②函数表达式</span></span>
<span class="line"><span class="token keyword">var</span> <span class="token function-variable function">fn</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// 函数体</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">var</span> method <span class="token operator">=</span> <span class="token function">funtion</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&quot;helloMethod&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token function">method</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="函数的参数" tabindex="-1"><a class="header-anchor" href="#函数的参数"><span>函数的参数</span></a></h3><p>形参不用var去修饰</p><p>形参和实参个数不一定相等</p><p>arguments对象 是个数组 会将传递的实参进行封装</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">	<span class="token comment">//var sum = a+b+c;</span></span>
<span class="line">	<span class="token comment">//alert(sum);</span></span>
<span class="line">	<span class="token comment">//arguments是个数组 会将传递的实参进行封装</span></span>
<span class="line">	<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>arguments<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">			<span class="token function">alert</span><span class="token punctuation">(</span>arguments<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">		<span class="token punctuation">}</span></span>
<span class="line">	<span class="token punctuation">}</span></span>
<span class="line">	<span class="token function">fn</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="函数的返回值" tabindex="-1"><a class="header-anchor" href="#函数的返回值"><span>函数的返回值</span></a></h3><p>在定义函数的时候不必表明是否具有返回值</p><p>返回值仅仅通过return关键字就可以了 return后的代码不执行</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span>b</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">	<span class="token keyword">return</span> a<span class="token operator">+</span>b<span class="token punctuation">;</span></span>
<span class="line">	<span class="token comment">//alert(&quot;xxxx&quot;);</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token function">alert</span><span class="token punctuation">(</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="函数的使用" tabindex="-1"><a class="header-anchor" href="#函数的使用"><span>函数的使用</span></a></h3><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token comment">// 声明函数</span></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">sayHi</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;吃了没？&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token comment">// 调用函数</span></span>
<span class="line"><span class="token function">sayHi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 求1-100之间所有数的和</span></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">getSum</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">var</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span>  i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">100</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    sum <span class="token operator">+=</span> i<span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>sum<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token comment">// 调用</span></span>
<span class="line"><span class="token function">getSum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">var</span> x <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">,</span> y <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">fn</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span> </span>
<span class="line"><span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a <span class="token operator">+</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="自调用函数" tabindex="-1"><a class="header-anchor" href="#自调用函数"><span>自调用函数</span></a></h3><div class="language-plain line-numbers-mode" data-highlighter="prismjs" data-ext="plain" data-title="plain"><pre><code><span class="line">(function () {</span>
<span class="line">  alert(123);</span>
<span class="line">})();</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="函数是一种数据类型" tabindex="-1"><a class="header-anchor" href="#函数是一种数据类型"><span>函数是一种数据类型</span></a></h3><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> fn<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token comment">/*</span>
<span class="line">函数做为返回值</span>
<span class="line">函数是一种类型，所以可以把函数可以作为返回值从函数内部返回，这种用法很常见</span>
<span class="line">*/</span></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token parameter">b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">alert</span><span class="token punctuation">(</span>a<span class="token operator">+</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="javascript中的对象" tabindex="-1"><a class="header-anchor" href="#javascript中的对象"><span>JavaScript中的对象</span></a></h2><p>JavaScript中的对象其实就是生活中对象的一个抽象</p><p>JavaScript的对象是无序属性的集合。</p><pre><code>其属性可以包含基本值、对象或函数。对象就是一组没有顺序的值。我们可以把JavaScript中的对象想象成键值对，其中值可以是数据和函数。
</code></pre><p>对象的行为和特征</p><pre><code>特征---属性

行为---方法
</code></pre><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">var</span> o <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">name</span><span class="token operator">:</span> &#39;zs<span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">sex</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token function-variable function">sayHi</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">//new Object()创建对象</span></span>
<span class="line"><span class="token keyword">var</span> person <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  person<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&#39;lisi&#39;</span><span class="token punctuation">;</span></span>
<span class="line">  person<span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token number">35</span><span class="token punctuation">;</span></span>
<span class="line">  person<span class="token punctuation">.</span>job <span class="token operator">=</span> <span class="token string">&#39;actor&#39;</span><span class="token punctuation">;</span></span>
<span class="line">  person<span class="token punctuation">.</span><span class="token function-variable function">sayHi</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Hello,everyBody&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">//工厂函数创建对象</span></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">createPerson</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> age<span class="token punctuation">,</span> job</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">var</span> person <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  person<span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span></span>
<span class="line">  person<span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span></span>
<span class="line">  person<span class="token punctuation">.</span>job <span class="token operator">=</span> job<span class="token punctuation">;</span></span>
<span class="line">  person<span class="token punctuation">.</span><span class="token function-variable function">sayHi</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Hello,everyBody&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  <span class="token keyword">return</span> person<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token keyword">var</span> p1 <span class="token operator">=</span> <span class="token function">createPerson</span><span class="token punctuation">(</span><span class="token string">&#39;张三&#39;</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token string">&#39;actor&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">//自定义构造函数</span></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">Person</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span>age<span class="token punctuation">,</span>job</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">this</span><span class="token punctuation">.</span>job <span class="token operator">=</span> job<span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function-variable function">sayHi</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">  	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Hello,everyBody&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token keyword">var</span> p1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">&#39;张三&#39;</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token string">&#39;actor&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="对象的使用" tabindex="-1"><a class="header-anchor" href="#对象的使用"><span>对象的使用</span></a></h3><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token comment">//遍历对象</span></span>
<span class="line"><span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  obj<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> i <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> key <span class="token keyword">in</span> obj<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>key <span class="token operator">+</span> <span class="token string">&quot;==&quot;</span> <span class="token operator">+</span> obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">//删除对象属性</span></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">fun</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> </span>
<span class="line">  <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&#39;mm&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">fun</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> </span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// mm </span></span>
<span class="line"><span class="token keyword">delete</span> obj<span class="token punctuation">.</span>name<span class="token punctuation">;</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// undefined</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="内置对象" tabindex="-1"><a class="header-anchor" href="#内置对象"><span>内置对象</span></a></h2><p>JavaScript中的对象分为3种：内置对象、浏览器对象、自定义对象</p><p>JavaScript 提供多个内置对象：Math/Array/Number/String/Boolean...</p><p>对象只是带有<strong>属性</strong>和<strong>方法</strong>的特殊数据类型。</p><p>学习一个内置对象的使用，只要学会其常用的成员的使用（通过查文档学习）</p><p>可以通过MDN/W3C来查询</p><p>内置对象的方法很多，我们只需要知道内置对象提供的常用方法，使用的时候查询文档。</p><h3 id="mdn" tabindex="-1"><a class="header-anchor" href="#mdn"><span>MDN</span></a></h3>`,43)),a(p,{style:{color:"rgb(51, 51, 51)"}},{default:t(()=>n[4]||(n[4]=[s("Mozilla 开发者网络（MDN）提供有关开放网络技术（Open Web）的信息，包括 HTML、CSS 和万维网及 HTML5 应用的 API。")])),_:1}),l("p",null,[l("a",v,[n[5]||(n[5]=s("https://developer.mozilla.org/zh-CN/")),a(c)])]),n[25]||(n[25]=e(`<h3 id="math对象" tabindex="-1"><a class="header-anchor" href="#math对象"><span>Math对象</span></a></h3><p>Math对象不是构造函数，它具有数学常数和函数的属性和方法，都是以静态成员的方式提供</p><p>跟数学相关的运算来找Math中的成员（求绝对值，取整）</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">Math<span class="token punctuation">.</span><span class="token constant">PI</span>						<span class="token comment">// 圆周率</span></span>
<span class="line">Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span>				<span class="token comment">// 生成随机数</span></span>
<span class="line">Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">/</span>Math<span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span><span class="token punctuation">)</span>	 <span class="token comment">// 向下取整/向上取整</span></span>
<span class="line">Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span><span class="token punctuation">)</span>				<span class="token comment">// 取整，四舍五入</span></span>
<span class="line">Math<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span><span class="token punctuation">)</span>					<span class="token comment">// 绝对值</span></span>
<span class="line">Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">/</span>Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span><span class="token punctuation">)</span>		 <span class="token comment">// 求最大和最小值</span></span>
<span class="line"></span>
<span class="line">Math<span class="token punctuation">.</span><span class="token function">sin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">/</span>Math<span class="token punctuation">.</span><span class="token function">cos</span><span class="token punctuation">(</span><span class="token punctuation">)</span>		 <span class="token comment">// 正弦/余弦</span></span>
<span class="line">Math<span class="token punctuation">.</span><span class="token function">power</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">/</span>Math<span class="token punctuation">.</span><span class="token function">sqrt</span><span class="token punctuation">(</span><span class="token punctuation">)</span>	 <span class="token comment">// 求指数次幂/求平方根</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="regexp" tabindex="-1"><a class="header-anchor" href="#regexp"><span>RegExp</span></a></h3><p>创建方式：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">var</span> reg <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span>pattern<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token keyword">var</span> reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^正则规则$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>规则的写法</p><p>[0-9]</p><pre><code>		[A-Z]

		[a-z]

		[A-z]

		\\d 代表数据

		\\D	非数字

		\\w	查找单词字符

		\\W	查找非单词字符

		\\s	查找空白字符

		\\S	查找非空白字符

		n+	出现至少一次

		n*	出现0次或多次

		n?	出现0次或1次

		{6} 出现6次

		{2,8} 2到8次

方法：	

	test(str):检索字符串中指定的值。返回 true 或 false
</code></pre><p>需求：</p><pre><code>校验邮箱
</code></pre><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">var</span> email <span class="token operator">=</span> javascript_0912@<span class="token number">163</span><span class="token punctuation">.</span>com</span>
<span class="line"><span class="token keyword">var</span> reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[A-z]+[A-z0-9_-]*\\@[A-z0-9]+\\.[A-z]+$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span></span>
<span class="line">reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>email<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>​</p><h3 id="js的事件" tabindex="-1"><a class="header-anchor" href="#js的事件"><span>js的事件</span></a></h3><p>常用事件</p><pre><code>  onclick:点击事件

onchange:域内容被改变的事件
</code></pre><p>应用示例：二级联动</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token operator">&lt;</span>select id<span class="token operator">=</span><span class="token string">&quot;city&quot;</span><span class="token operator">&gt;</span></span>
<span class="line">				<span class="token operator">&lt;</span>option value<span class="token operator">=</span><span class="token string">&quot;bj&quot;</span><span class="token operator">&gt;</span>北京<span class="token operator">&lt;</span><span class="token operator">/</span>option<span class="token operator">&gt;</span></span>
<span class="line">				<span class="token operator">&lt;</span>option value<span class="token operator">=</span><span class="token string">&quot;hn&quot;</span><span class="token operator">&gt;</span>河南<span class="token operator">&lt;</span><span class="token operator">/</span>option<span class="token operator">&gt;</span></span>
<span class="line">	<span class="token operator">&lt;</span><span class="token operator">/</span>select<span class="token operator">&gt;</span></span>
<span class="line">			<span class="token operator">&lt;</span>select id<span class="token operator">=</span><span class="token string">&quot;area&quot;</span><span class="token operator">&gt;</span></span>
<span class="line">				<span class="token operator">&lt;</span>option<span class="token operator">&gt;</span>海淀<span class="token operator">&lt;</span><span class="token operator">/</span>option<span class="token operator">&gt;</span></span>
<span class="line">				<span class="token operator">&lt;</span>option<span class="token operator">&gt;</span>朝阳<span class="token operator">&lt;</span><span class="token operator">/</span>option<span class="token operator">&gt;</span></span>
<span class="line">				<span class="token operator">&lt;</span>option<span class="token operator">&gt;</span>东城<span class="token operator">&lt;</span><span class="token operator">/</span>option<span class="token operator">&gt;</span></span>
<span class="line">				<span class="token operator">&lt;</span>option<span class="token operator">&gt;</span>西城<span class="token operator">&lt;</span><span class="token operator">/</span>option<span class="token operator">&gt;</span></span>
<span class="line">			<span class="token operator">&lt;</span><span class="token operator">/</span>select<span class="token operator">&gt;</span></span>
<span class="line">			<span class="token operator">&lt;</span>script type<span class="token operator">=</span><span class="token string">&quot;text/javascript&quot;</span><span class="token operator">&gt;</span></span>
<span class="line">				<span class="token keyword">var</span> select <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;city&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">				select<span class="token punctuation">.</span><span class="token function-variable function">onchange</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">					<span class="token keyword">var</span> optionVal <span class="token operator">=</span> select<span class="token punctuation">.</span>value<span class="token punctuation">;</span></span>
<span class="line">					<span class="token keyword">switch</span><span class="token punctuation">(</span>optionVal<span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">						<span class="token keyword">case</span> <span class="token string">&#39;bj&#39;</span><span class="token operator">:</span></span>
<span class="line">							<span class="token keyword">var</span> area <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;area&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">							area<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">&quot;&lt;option&gt;海淀&lt;/option&gt;&lt;option&gt;朝阳&lt;/option&gt;&lt;option&gt;东城&lt;/option&gt;&quot;</span><span class="token punctuation">;</span></span>
<span class="line">							<span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">						<span class="token keyword">case</span> <span class="token string">&#39;hn&#39;</span><span class="token operator">:</span></span>
<span class="line">							<span class="token keyword">var</span> area <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;area&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">							area<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">&quot;&lt;option&gt;郑州&lt;/option&gt;&lt;option&gt;洛阳&lt;/option&gt;&lt;option&gt;平顶山&lt;/option&gt;&quot;</span><span class="token punctuation">;</span></span>
<span class="line">							<span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">						<span class="token keyword">default</span><span class="token operator">:</span></span>
<span class="line">							<span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&quot;error&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">					<span class="token punctuation">}</span></span>
<span class="line">				<span class="token punctuation">}</span><span class="token punctuation">;</span>				</span>
<span class="line">				</span>
<span class="line">			<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><pre><code>onfoucus:获得焦点的事件

onblur:失去焦点的事件
</code></pre><p>应用示例</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token operator">&lt;</span>label <span class="token keyword">for</span><span class="token operator">=</span><span class="token string">&quot;txt&quot;</span><span class="token operator">&gt;</span>name<span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">&gt;</span></span>
<span class="line">    <span class="token operator">&lt;</span>input id<span class="token operator">=</span><span class="token string">&quot;txt&quot;</span> type<span class="token operator">=</span><span class="token string">&quot;text&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span></span>
<span class="line">    <span class="token operator">&lt;</span>span id<span class="token operator">=</span><span class="token string">&quot;action&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span></span>
<span class="line">    <span class="token operator">&lt;</span>script type<span class="token operator">=</span><span class="token string">&quot;text/javascript&quot;</span><span class="token operator">&gt;</span></span>
<span class="line">        <span class="token keyword">var</span> txt <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        txt<span class="token punctuation">.</span><span class="token function-variable function">onfocus</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">            <span class="token comment">//友好提示</span></span>
<span class="line">            <span class="token keyword">var</span> span <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;action&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            span<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">&quot;用户名格式最小8位&quot;</span><span class="token punctuation">;</span></span>
<span class="line">            span<span class="token punctuation">.</span>style<span class="token punctuation">.</span>color <span class="token operator">=</span> <span class="token string">&quot;green&quot;</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">        txt<span class="token punctuation">.</span><span class="token function-variable function">onblur</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">            <span class="token comment">//没写出来</span></span>
<span class="line">            <span class="token keyword">var</span> reg<span class="token operator">=</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token keyword">var</span> inputEle <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token function">alert</span><span class="token punctuation">(</span>inputEle<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token keyword">if</span><span class="token punctuation">(</span>reg<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>inputEle<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">                <span class="token keyword">var</span> span <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;action&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                span<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">&quot;输入正确&quot;</span><span class="token punctuation">;</span></span>
<span class="line">                span<span class="token punctuation">.</span>style<span class="token punctuation">.</span>color <span class="token operator">=</span> <span class="token string">&quot;green&quot;</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span></span>
<span class="line">                <span class="token comment">//错误提示</span></span>
<span class="line">                <span class="token keyword">var</span> span <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;action&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                span<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">&quot;对不起 格式不正确&quot;</span><span class="token punctuation">;</span></span>
<span class="line">                span<span class="token punctuation">.</span>style<span class="token punctuation">.</span>color <span class="token operator">=</span> <span class="token string">&quot;red&quot;</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>onload:页面加载完毕事件</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token operator">&lt;</span>script type<span class="token operator">=</span><span class="token string">&quot;text/javascript&quot;</span><span class="token operator">&gt;</span></span>
<span class="line">    <span class="token comment">//&lt;body&gt;里的内容加载完成后 再执行</span></span>
<span class="line">        window<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">var</span> span <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;span&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token function">alert</span><span class="token punctuation">(</span>span<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            span<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">&quot;hello js&quot;</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span></span>
<span class="line"><span class="token operator">&lt;</span><span class="token operator">/</span>head<span class="token operator">&gt;</span></span>
<span class="line"><span class="token operator">&lt;</span>body<span class="token operator">&gt;</span></span>
<span class="line">    <span class="token operator">&lt;</span>span id<span class="token operator">=</span><span class="token string">&quot;span&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span></span>
<span class="line"><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="js事件的绑定方式" tabindex="-1"><a class="header-anchor" href="#js事件的绑定方式"><span>JS事件的绑定方式</span></a></h3><p>(1)将事件和响应行为都内嵌到html标签中</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">&quot;button&quot;</span> value<span class="token operator">=</span><span class="token string">&quot;button&quot;</span>  onclick<span class="token operator">=</span><span class="token string">&quot;alert(&#39;abc&#39;)&quot;</span><span class="token operator">/</span><span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>(2)将事件内嵌到html中而响应行为用函数进行封装</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">&quot;button&quot;</span> value<span class="token operator">=</span><span class="token string">&quot;button&quot;</span> onclick<span class="token operator">=</span><span class="token string">&quot;fn()&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span></span>
<span class="line"><span class="token operator">&lt;</span>script type<span class="token operator">=</span><span class="token string">&quot;text/javascript&quot;</span><span class="token operator">&gt;</span></span>
<span class="line">	<span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">		<span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&quot;abc&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token punctuation">}</span></span>
<span class="line"><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>​</p><p>(3)将事件和响应行为 与html标签完全分离</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token operator">&lt;</span>input id<span class="token operator">=</span><span class="token string">&quot;btn&quot;</span> type<span class="token operator">=</span><span class="token string">&quot;button&quot;</span> value<span class="token operator">=</span><span class="token string">&quot;button&quot;</span><span class="token operator">/</span><span class="token operator">&gt;</span></span>
<span class="line"><span class="token operator">&lt;</span>script type<span class="token operator">=</span><span class="token string">&quot;text/javascript&quot;</span><span class="token operator">&gt;</span></span>
<span class="line">	<span class="token keyword">var</span> btn <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;btn&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	btn<span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">	<span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>​</p><p>(4)阻止事件的默认行为</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">&quot;https://www.baidu.com&quot;</span> onclick<span class="token operator">=</span><span class="token string">&quot;return false&quot;</span><span class="token operator">&gt;</span>点击我吧<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><hr><h2 id="js的bom" tabindex="-1"><a class="header-anchor" href="#js的bom"><span>JS的bom</span></a></h2><h3 id="window对象" tabindex="-1"><a class="header-anchor" href="#window对象"><span>window对象</span></a></h3><pre><code>	提示框：alert(&quot;提示信息&quot;);

	确认框：confirm(&quot;确认信息&quot;);

			有返回值：如果点击确认返回true 如果点击取消 返回false

			var res = confirm(&quot;您确认要删除吗？&quot;);

			alert(res);

	输入框：prompt(&quot;提示信息&quot;);

			有返回值：如果点击确认返回输入框的文本 点击取消返回null

			var res = prompt(&quot;请输入密码？&quot;);

			alert(res);
</code></pre><p>open方法：重新打开一标签页</p>`,40)),a(p,{style:{color:"rgb(101, 123, 131)"}},{default:t(()=>n[6]||(n[6]=[s("window.")])),_:1}),a(p,{style:{color:"rgb(38, 139, 210)"}},{default:t(()=>n[7]||(n[7]=[s("open")])),_:1}),a(p,{style:{color:"rgb(101, 123, 131)"}},{default:t(()=>n[8]||(n[8]=[s("(")])),_:1}),a(p,{style:{color:"rgb(42, 161, 152)"}},{default:t(()=>n[9]||(n[9]=[s('"http://www.baidu.com"')])),_:1}),a(p,{style:{color:"rgb(101, 123, 131)"}},{default:t(()=>n[10]||(n[10]=[s(");")])),_:1}),n[26]||(n[26]=e(`<p>setTimeout(函数,毫秒值)：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token operator">&lt;</span>script<span class="token operator">&gt;</span></span>
<span class="line">        <span class="token function">setTimeout</span><span class="token punctuation">(</span></span>
<span class="line">            <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&quot;hello setTimeout&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token number">3000</span></span>
<span class="line">        <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span></span>
<span class="line"><span class="token operator">&lt;</span><span class="token operator">/</span>head<span class="token operator">&gt;</span></span>
<span class="line"></span>
<span class="line"><span class="token operator">&lt;</span>body<span class="token operator">&gt;</span></span>
<span class="line">    <span class="token operator">&lt;</span>span<span class="token operator">&gt;</span><span class="token number">3</span>秒后将弹出hello setTimeout<span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span></span>
<span class="line"><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>​</p><p>clearTimeout(定时器的名称)</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token operator">&lt;</span>script<span class="token operator">&gt;</span></span>
<span class="line">        <span class="token keyword">var</span> timer<span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">var</span> <span class="token function-variable function">fn</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&quot;将会一直执行&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            timer <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span>fn<span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">var</span> <span class="token function-variable function">closer</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token function">clearTimeout</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span></span>
<span class="line"><span class="token operator">&lt;</span><span class="token operator">/</span>head<span class="token operator">&gt;</span></span>
<span class="line"></span>
<span class="line"><span class="token operator">&lt;</span>body<span class="token operator">&gt;</span></span>
<span class="line">    <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">&quot;button&quot;</span> onclick<span class="token operator">=</span><span class="token string">&quot;closer()&quot;</span> value<span class="token operator">=</span><span class="token string">&quot;清除定时器&quot;</span><span class="token operator">&gt;</span></span>
<span class="line"><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>setInterval(函数,毫秒值)：间隔毫秒数执行</p><p>clearInterval(定时器的名称)</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token operator">&lt;</span>script<span class="token operator">&gt;</span></span>
<span class="line">        <span class="token keyword">var</span> timer <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span></span>
<span class="line">            <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&quot;nihao&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token number">2000</span></span>
<span class="line">        <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">var</span> <span class="token function-variable function">closer</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token function">clearInterval</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span></span>
<span class="line"><span class="token operator">&lt;</span><span class="token operator">/</span>head<span class="token operator">&gt;</span></span>
<span class="line"><span class="token operator">&lt;</span>body<span class="token operator">&gt;</span></span>
<span class="line">    <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">&quot;button&quot;</span> onclick<span class="token operator">=</span><span class="token string">&quot;closer()&quot;</span> value<span class="token operator">=</span><span class="token string">&quot;清除定时器&quot;</span><span class="token operator">&gt;</span></span>
<span class="line"><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>应用示例</p><p>注册成功后3秒后跳转到首页</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token operator">&lt;</span>script type<span class="token operator">=</span><span class="token string">&quot;text/javascript&quot;</span><span class="token operator">&gt;</span></span>
<span class="line">        <span class="token keyword">var</span> time <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">var</span> timer<span class="token punctuation">;</span></span>
<span class="line">        timer <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span></span>
<span class="line">            <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token keyword">var</span> second <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;second&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                <span class="token keyword">if</span> <span class="token punctuation">(</span>time <span class="token operator">&gt;=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                    second<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> time<span class="token punctuation">;</span></span>
<span class="line">                    time<span class="token operator">--</span><span class="token punctuation">;</span></span>
<span class="line">                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">                    <span class="token function">clearInterval</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                    location<span class="token punctuation">.</span>href <span class="token operator">=</span> <span class="token string">&quot;index.html&quot;</span><span class="token punctuation">;</span></span>
<span class="line">                <span class="token punctuation">}</span></span>
<span class="line">            <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token number">1000</span></span>
<span class="line">        <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span></span>
<span class="line"><span class="token operator">&lt;</span><span class="token operator">/</span>head<span class="token operator">&gt;</span></span>
<span class="line"></span>
<span class="line"><span class="token operator">&lt;</span>body<span class="token operator">&gt;</span></span>
<span class="line">    <span class="token operator">&lt;</span>span id<span class="token operator">=</span><span class="token string">&quot;second&quot;</span> style<span class="token operator">=</span><span class="token string">&quot;color: red;&quot;</span><span class="token operator">&gt;</span><span class="token number">3</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span>秒后跳转到首页，如果不跳转请<span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">&quot;index.html&quot;</span><span class="token operator">&gt;</span>点击这里<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span></span>
<span class="line"><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="location-href" tabindex="-1"><a class="header-anchor" href="#location-href"><span>location.href</span></a></h3><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token operator">&lt;</span>script type<span class="token operator">=</span><span class="token string">&quot;text/javascript&quot;</span><span class="token operator">&gt;</span></span>
<span class="line">        <span class="token keyword">function</span> <span class="token function">redirectDemo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            location<span class="token punctuation">.</span>href <span class="token operator">=</span> <span class="token string">&quot;index.html&quot;</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span></span>
<span class="line"><span class="token operator">&lt;</span><span class="token operator">/</span>head<span class="token operator">&gt;</span></span>
<span class="line"></span>
<span class="line"><span class="token operator">&lt;</span>body<span class="token operator">&gt;</span></span>
<span class="line">    <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">&quot;button&quot;</span> value<span class="token operator">=</span><span class="token string">&quot;跳转&quot;</span> onclick<span class="token operator">=</span><span class="token string">&quot;redirectDemo()&quot;</span><span class="token operator">&gt;</span></span>
<span class="line"><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="history" tabindex="-1"><a class="header-anchor" href="#history"><span>history</span></a></h3><p>back();</p><p>forward();</p><p>go();</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">&quot;index.html&quot;</span><span class="token operator">&gt;</span>后一页<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">&gt;</span></span>
<span class="line">		<span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">&quot;button&quot;</span> value<span class="token operator">=</span><span class="token string">&quot;上一页&quot;</span> onclick<span class="token operator">=</span><span class="token string">&quot;history.back()&quot;</span><span class="token operator">&gt;</span></span>
<span class="line">		<span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">&quot;button&quot;</span> value<span class="token operator">=</span><span class="token string">&quot;下一页&quot;</span> onclick<span class="token operator">=</span><span class="token string">&quot;history.forward()&quot;</span><span class="token operator">&gt;</span></span>
<span class="line">		</span>
<span class="line">		<span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">&quot;button&quot;</span> value<span class="token operator">=</span><span class="token string">&quot;上一页&quot;</span> onclick<span class="token operator">=</span><span class="token string">&quot;history.go(-1)&quot;</span><span class="token operator">&gt;</span></span>
<span class="line">		<span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">&quot;button&quot;</span> value<span class="token operator">=</span><span class="token string">&quot;下一页&quot;</span> onclick<span class="token operator">=</span><span class="token string">&quot;history.go(1)&quot;</span><span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="js-dom" tabindex="-1"><a class="header-anchor" href="#js-dom"><span>JS DOM</span></a></h2>`,20)),a(p,{style:{color:"rgb(51, 51, 51)"}},{default:t(()=>n[11]||(n[11]=[s("文档对象模型（Document Object Model，简称DOM），是")])),_:1}),n[27]||(n[27]=s("[W3C](http://baike.baidu.com/item/W3C)")),a(p,{style:{color:"rgb(51, 51, 51)"}},{default:t(()=>n[12]||(n[12]=[s("组织推荐的处理可扩展标志语言的标准编程接口。在网页上，组织页面（或文档）的对象被组织在一个树形结构中，用来表示文档中对象的标准模型就称为DOM。Document Object Model的历史可以追溯至1990年代后期微软与")])),_:1}),n[28]||(n[28]=s("[Netscape](http://baike.baidu.com/item/Netscape)")),a(p,{style:{color:"rgb(51, 51, 51)"}},{default:t(()=>n[13]||(n[13]=[s("的“浏览器大战”，双方为了在")])),_:1}),n[29]||(n[29]=s("[JavaScript](http://baike.baidu.com/item/JavaScript)")),a(p,{style:{color:"rgb(51, 51, 51)"}},{default:t(()=>n[14]||(n[14]=[s("与")])),_:1}),n[30]||(n[30]=s("[JScript](http://baike.baidu.com/item/JScript)")),a(p,{style:{color:"rgb(51, 51, 51)"}},{default:t(()=>n[15]||(n[15]=[s("一决生死，于是大规模的赋予浏览器强大的功能。微软在网页技术上加入了不少专属事物，既有")])),_:1}),n[31]||(n[31]=s("[VBScript](http://baike.baidu.com/item/VBScript)")),a(p,{style:{color:"rgb(51, 51, 51)"}},{default:t(()=>n[16]||(n[16]=[s("、")])),_:1}),n[32]||(n[32]=s("[ActiveX](http://baike.baidu.com/item/ActiveX)")),a(p,{style:{color:"rgb(51, 51, 51)"}},{default:t(()=>n[17]||(n[17]=[s("、以及微软自家的")])),_:1}),n[33]||(n[33]=s("[DHTML](http://baike.baidu.com/item/DHTML)")),a(p,{style:{color:"rgb(51, 51, 51)"}},{default:t(()=>n[18]||(n[18]=[s("格式等，使不少网页使用非微软平台及浏览器无法正常显示。DOM即是当时蕴酿出来的杰作。")])),_:1}),a(p,{style:{color:"rgb(51, 51, 51)"}},{default:t(()=>n[19]||(n[19]=[s("DOM又称为文档树模型")])),_:1}),n[34]||(n[34]=e(`<p><img src="https://cdn.nlark.com/yuque/0/2018/png/96947/1534768888791-1aa4a941-3fe5-41f5-a774-4ebecd10f7df.png" alt=""></p><p>文档：一个网页可以称为文档</p><p>节点：网页中的所有内容都是节点（标签、属性、文本、注释等）</p><p>元素：网页中的标签</p><p>属性：标签的属性</p><p>文档树</p><p><img src="https://cdn.nlark.com/yuque/0/2018/png/96947/1534768971257-784ed258-2e45-4bad-ad67-c4d18e43ef52.png" alt=""></p><h3 id="dom经常进行的操作" tabindex="-1"><a class="header-anchor" href="#dom经常进行的操作"><span>DOM经常进行的操作</span></a></h3><ul><li>获取元素</li><li>动态创建元素</li><li>对元素进行操作(设置其属性或调用其方法)</li><li>事件(什么时机做相应的操作)</li></ul><p>应用示例</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token comment">//根据id获取元素*****</span></span>
<span class="line"><span class="token keyword">var</span> div <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;div&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>div<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">//根据标签名获取元素******</span></span>
<span class="line"><span class="token keyword">var</span> divs <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">&#39;div&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> divs<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">var</span> div <span class="token operator">=</span> divs<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>div<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">//根据name获取元素**</span></span>
<span class="line"><span class="token keyword">var</span> inputs <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByName</span><span class="token punctuation">(</span><span class="token string">&#39;hobby&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> inputs<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">var</span> input <span class="token operator">=</span> inputs<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>input<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">//根据类名获取元素**</span></span>
<span class="line"><span class="token keyword">var</span> mains <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByClassName</span><span class="token punctuation">(</span><span class="token string">&#39;main&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> mains<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">var</span> main <span class="token operator">=</span> mains<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>main<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="创建元素的方式" tabindex="-1"><a class="header-anchor" href="#创建元素的方式"><span>创建元素的方式</span></a></h2><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token comment">//document.write()    </span></span>
<span class="line"><span class="token operator">&lt;</span>script<span class="token operator">&gt;</span></span>
<span class="line">		document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">&#39;新设置的内容&lt;p&gt;标签也可以生成&lt;/p&gt;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span></span>
<span class="line"><span class="token operator">&lt;</span><span class="token operator">/</span>head<span class="token operator">&gt;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">//innerHTML</span></span>
<span class="line"><span class="token operator">&lt;</span>body<span class="token operator">&gt;</span></span>
<span class="line">		<span class="token operator">&lt;</span>p id<span class="token operator">=</span><span class="token string">&quot;pid&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span></span>
<span class="line"><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">&gt;</span></span>
<span class="line"><span class="token operator">&lt;</span>script<span class="token operator">&gt;</span></span>
<span class="line">		<span class="token keyword">var</span> p <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;pid&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">		p<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">&quot;待文档加载完再执行&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">//document.createElement() 示例①</span></span>
<span class="line"><span class="token operator">&lt;</span>body<span class="token operator">&gt;</span></span>
<span class="line"><span class="token operator">&lt;</span>p id<span class="token operator">=</span><span class="token string">&quot;demo&quot;</span><span class="token operator">&gt;</span>单击按钮创建有文本的按钮<span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span></span>
<span class="line"><span class="token operator">&lt;</span>button onclick<span class="token operator">=</span><span class="token string">&quot;myFunction()&quot;</span><span class="token operator">&gt;</span>点我<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span></span>
<span class="line"><span class="token operator">&lt;</span>script<span class="token operator">&gt;</span></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">myFunction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">	<span class="token keyword">var</span> btn<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&quot;BUTTON&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token keyword">var</span> t<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">createTextNode</span><span class="token punctuation">(</span><span class="token string">&quot;CLICK ME&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	btn<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>btn<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span></span>
<span class="line"><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">&gt;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">//document.createElement() 示例②</span></span>
<span class="line"><span class="token operator">&lt;</span>body<span class="token operator">&gt;</span></span>
<span class="line"></span>
<span class="line"><span class="token operator">&lt;</span>p id<span class="token operator">=</span><span class="token string">&quot;demo&quot;</span><span class="token operator">&gt;</span>单击按钮创建有文本的按钮<span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span></span>
<span class="line"><span class="token operator">&lt;</span>button onclick<span class="token operator">=</span><span class="token string">&quot;myFunction()&quot;</span><span class="token operator">&gt;</span>点我<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span></span>
<span class="line"><span class="token operator">&lt;</span>script<span class="token operator">&gt;</span></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">myFunction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">	<span class="token keyword">var</span> btn<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&quot;p&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token keyword">var</span> t<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">createTextNode</span><span class="token punctuation">(</span><span class="token string">&quot;hello p&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	btn<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>btn<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span></span>
<span class="line"><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,13))])}const h=i(k,[["render",m],["__file","base01.html.vue"]]),y=JSON.parse('{"path":"/docs/javascript/base01.html","title":"javascript基础知识01","lang":"zh-CN","frontmatter":{"title":"javascript基础知识01","date":"2022-01-29T17:18:23.000Z"},"headers":[{"level":3,"title":"JavaScript的书写位置","slug":"javascript的书写位置","link":"#javascript的书写位置","children":[]},{"level":3,"title":"JavaScript的变量","slug":"javascript的变量","link":"#javascript的变量","children":[]},{"level":3,"title":"JavaScript变量的命名规则和规范","slug":"javascript变量的命名规则和规范","link":"#javascript变量的命名规则和规范","children":[]},{"level":3,"title":"JavaScript数据类型","slug":"javascript数据类型","link":"#javascript数据类型","children":[]},{"level":3,"title":"获取变量的类型","slug":"获取变量的类型","link":"#获取变量的类型","children":[]},{"level":3,"title":"字面量","slug":"字面量","link":"#字面量","children":[]},{"level":3,"title":"注释","slug":"注释","link":"#注释","children":[]},{"level":3,"title":"数组","slug":"数组","link":"#数组","children":[]},{"level":3,"title":"数组的定义","slug":"数组的定义","link":"#数组的定义","children":[]},{"level":3,"title":"数组的取值","slug":"数组的取值","link":"#数组的取值","children":[]},{"level":3,"title":"遍历数组","slug":"遍历数组","link":"#遍历数组","children":[]},{"level":3,"title":"数组元素的新增","slug":"数组元素的新增","link":"#数组元素的新增","children":[]},{"level":3,"title":"函数","slug":"函数","link":"#函数","children":[]},{"level":3,"title":"函数的定义","slug":"函数的定义","link":"#函数的定义","children":[]},{"level":3,"title":"函数的参数","slug":"函数的参数","link":"#函数的参数","children":[]},{"level":3,"title":"函数的返回值","slug":"函数的返回值","link":"#函数的返回值","children":[]},{"level":3,"title":"函数的使用","slug":"函数的使用","link":"#函数的使用","children":[]},{"level":3,"title":"自调用函数","slug":"自调用函数","link":"#自调用函数","children":[]},{"level":3,"title":"函数是一种数据类型","slug":"函数是一种数据类型","link":"#函数是一种数据类型","children":[]},{"level":2,"title":"JavaScript中的对象","slug":"javascript中的对象","link":"#javascript中的对象","children":[{"level":3,"title":"对象的使用","slug":"对象的使用","link":"#对象的使用","children":[]}]},{"level":2,"title":"内置对象","slug":"内置对象","link":"#内置对象","children":[{"level":3,"title":"MDN","slug":"mdn","link":"#mdn","children":[]},{"level":3,"title":"Math对象","slug":"math对象","link":"#math对象","children":[]},{"level":3,"title":"RegExp","slug":"regexp","link":"#regexp","children":[]},{"level":3,"title":"js的事件","slug":"js的事件","link":"#js的事件","children":[]},{"level":3,"title":"JS事件的绑定方式","slug":"js事件的绑定方式","link":"#js事件的绑定方式","children":[]}]},{"level":2,"title":"JS的bom","slug":"js的bom","link":"#js的bom","children":[{"level":3,"title":"window对象","slug":"window对象","link":"#window对象","children":[]},{"level":3,"title":"location.href","slug":"location-href","link":"#location-href","children":[]},{"level":3,"title":"history","slug":"history","link":"#history","children":[]}]},{"level":2,"title":"JS DOM","slug":"js-dom","link":"#js-dom","children":[{"level":3,"title":"DOM经常进行的操作","slug":"dom经常进行的操作","link":"#dom经常进行的操作","children":[]}]},{"level":2,"title":"创建元素的方式","slug":"创建元素的方式","link":"#创建元素的方式","children":[]}],"git":{"createdTime":1731664381000,"updatedTime":1731664381000,"contributors":[{"name":"0x0bit","email":"cn6bo.y@gmail.com","commits":1}]},"filePathRelative":"docs/javascript/base01.md"}');export{h as comp,y as data};
